server:
  port: 8080
  servlet:
    context-path: /mtt
param:
  db-system-ip: localhost
spring:
  datasource:
    druid:
      url: jdbc:postgresql://${param.db-system-ip}:5432/testdb?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useSSL=false&yearIsDateType=false&allowMultiQueries=true
      username: postgres
      password: postgres
      # 连接池配置
      # 初始化大小，最小，最大
      initialSize: 0
      minIdle: 1
      maxActive: 20
      # 配置获取连接等待超时的时间
      maxWait: 28700
      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      timeBetweenEvictionRunsMillis: 28700
      # 配置一个连接在池中最小生存的时间，单位是毫秒
      minEvictableIdleTimeMillis: 300000
      validationQuery: SELECT 1
      testWhileIdle: true
      testOnBorrow: false
      testOnReturn: false
      # 打开PSCache，并且指定每个连接上PSCache的大小
      poolPreparedStatements: true
      maxPoolPreparedStatementPerConnectionSize: 20
      # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
      # filters: stat,wall,log4j
      # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
      connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
      # 合并多个DruidDataSource的监控数据

mybatis:
  mapper-locations: classpath:/mapper/**/*Mapper.xml
  # type-aliases-package: com.onesports.swms.dao.model
  configuration:
    #<!--将返回结果转换为驼峰-->
    mapUnderscoreToCamelCase: true
    map-underscore-to-camel-case: true
    use-generated-keys: true